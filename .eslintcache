[{"/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/index.js":"1","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/App.js":"2","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/ApiService.js":"3","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Context/CartContext.js":"4","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Components/Main.js":"5","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Components/About.js":"6","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Components/Detail.js":"7","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Components/Cart.js":"8","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Components/Navigation.js":"9","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Components/Landing.js":"10","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Components/Tags.js":"11"},{"size":221,"mtime":1610149280973,"results":"12","hashOfConfig":"13"},{"size":1158,"mtime":1610640589705,"results":"14","hashOfConfig":"13"},{"size":767,"mtime":1610188690775,"results":"15","hashOfConfig":"13"},{"size":2169,"mtime":1610668504717,"results":"16","hashOfConfig":"13"},{"size":2612,"mtime":1610673306197,"results":"17","hashOfConfig":"13"},{"size":111,"mtime":1610380424215,"results":"18","hashOfConfig":"13"},{"size":2238,"mtime":1610668092578,"results":"19","hashOfConfig":"13"},{"size":2748,"mtime":1610713568210,"results":"20","hashOfConfig":"13"},{"size":1097,"mtime":1610654612661,"results":"21","hashOfConfig":"13"},{"size":3851,"mtime":1610796351691,"results":"22","hashOfConfig":"13"},{"size":472,"mtime":1610672026427,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"cvb662",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},"/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/index.js",[],["54","55"],"/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/App.js",[],"/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/ApiService.js",[],"/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Context/CartContext.js",[],"/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Components/Main.js",["56","57","58","59","60","61"],"import React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport DB from '../DB/db.json';\nimport Tags from './Tags';\n\nimport IMG from '../public/temp-landing.jpg'\n\n\nfunction Main () {\n\n// const [isTagged, setIsTagged] = 'All'\n\n// const tags = ['All', 'Bread', 'Pastries', 'Gluten-Free']\n\nconst db = DB; // const result = await db.search(tag ALL)\n\n\nreturn (\n\n<>\n      <Tags />\n        { <div className='Bakery-Main'> \n        {db.length?<h2 className='list-head'>{db.length} Bakeries Available</h2>:null} \n         \n         <div className='Bakery'> \n              {db.length? db.map((bakery) => {return (\n                  <Link to={'/bakery/' + bakery.id} url={bakery.id} className=\"Link-Class\" key={bakery.id}>\n                  <div className='Single-Bakery-Card'>\n                      <li key={bakery.id} className='bakery-list'>\n                         {/* <img className='bakery-img'src={IMG}></img> */}\n                        <span className='repo-text'>{bakery.name} </span><br></br>\n                        <span className='repo-text'>{bakery.Description} </span>\n                       </li>\n                  </div>\n                  </Link>\n              )}): null} \n            </div>\n      </div>}\n </>\n\n );\n  \n}\n\n{/* <>\n  <Tags/>\n  <div className='Bakery-Main'>\n  {db.length?<h2 className='list-head'>{db.length} Bakeries Available</h2>:null} \n  <div className='Bakery'>\n  <GridList cellHeight={160}  cols={3}>\n  {db.length? db.map((bakery) => {return (\n\n<GridListTile key={bakery.id} cols={1}>\n          <Link to={'/bakery/' + bakery.id} url={bakery.id} className=\"Link-Class\" key={bakery.id}>\n          <ProductCard db={db}/>\n        </Link>\n</GridListTile>)}): null} \n\n</GridList>\n\n  </div>\n  </div>\n</> */}\n\n    \n    \n\n\n\n\nexport default Main;\n\n// useEffect(() => {\n  //   fetch('https://jsonplaceholder.typicode.com/posts')\n  //             .then(response => response.json())\n  //             .then(data => setData(data))\n  // }, [])\n  \n  {/* { <div className='Bakery-Main'>\n  {data.length?<h2 className='list-head'>Available Data {db.length}</h2>:null}         <div className='Bakery'>\n  {data.length? data.map((item) => {return (\n    <Link to={'/' + item.id} url={item.id}>\n    <li key={item.id} className='bakery-list'>\n    <span className='repo-text'>{item.title} </span><br></br>\n    <span className='repo-text'>{item.id} </span>\n    </li>\n    </Link>\n    );\n  }): null}    \n  </div>\n</div> } */}\n\n\n                            {/* {db.length && db.map(item => {return(\n                              <p>{item.Name}</p>\n                            )})} */}","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Components/About.js",[],"/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Components/Detail.js",["62","63","64","65","66"],"import React, {useState, useEffect, useContext} from 'react';\nimport {useParams} from 'react-router-dom'\nimport { AppContext } from '../Context/CartContext'\nimport DB from '../DB/db.json';\nimport { useHistory } from \"react-router-dom\";\n\nfunction Detail () {\n  const [cart, _,  __, addToCart, remove] = useContext(AppContext)\n  let history = useHistory(); \n  const db = DB;  \n  let {id} = useParams()\n  const bakery = db[id];\n\n\n  // function addToCart(cart, product){\n  //   console.log('Product', product);\n  //   const prod = product;\n  //   setCart([...cart,prod]);\n  //   //  cart && cart.map(item => console.log(item.name))\n  //   }\n\n    return (\n      <>\n       <button onClick={history.goBack}>go back</button>\n      <div className=\"detail-div\">\n      <div className=\"product-div\">\n\n      {bakery && <h1>{bakery.name}</h1>}\n      {bakery && <h1>{bakery.Description}</h1>}\n\n      {bakery && bakery.Products.map(product => {\n          return(\n            <div className=\"product-card\" key={product.ProductId}>\n                <h4>{product.ProductName}</h4>\n                <h5>{product.ProductPrice}$</h5>\n                <p>{product.ProductDescription}</p>\n                { cart.length === 0 ? <button onClick={() => {console.log('clicked'); addToCart(product)}}>+</button> : <button onClick={() => addToCart(product)}>+</button>}\n                { cart.length > 0 ? <button onClick={() => remove(product)}> - </button> : <button> -</button>}\n                {/* { <button onClick={() => emptyCart()}>Remove Item Cart</button>} */}\n                {/* { <button onClick={() => emptyCart()}>Empty Cart</button>} */}\n            </div>\n          )\n      })}\n  </div>\n  </div>\n  </>\n)\n}\n\nexport default Detail;\n\n{/* <h1> Id {id} </h1>\n{item && <p>Bakery Name: {item.name}</p>}\n\n// useEffect(() => {\n//   fetch(`https://jsonplaceholder.typicode.com/posts/${id}`)\n//             .then(response => response.json())\n//             .then(data => setItem(data))\n// }, [])\n\n// const cartItems = cart.map((el) => (\n    //   <div key={el.id}>\n    //     {`${el.name}: $${el.price}`}\n    //     <input type=\"submit\" value=\"remove\" onClick={() => removeFromCart(el)} />\n    //   </div>\n    // ));\n\n    <button onClick={addToCart}>Add</button> */}","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Components/Cart.js",["67","68","69"],"import React, { useContext } from 'react'\nimport { AppContext } from '../Context/CartContext'\n\n\n function Cart (props) {\n    const [cart, _,  __, addToCart, removeFromCart] = useContext(AppContext)  \n   \n    const itemsPrice = cart.reduce((a, c) => a + c.ProductPrice * c.Qty, 0);\n    const taxPrice = itemsPrice * 0.15;\n    const shipping = itemsPrice > 30? 0 : 3;\n    const totalPrice = itemsPrice + taxPrice + shipping;\n  \n    return(\n      <aside>\n          <h2>Cart Items</h2>\n          {cart.length === 0 && <div>Empty Cart</div>}\n          {cart.map(item => (\n            <div key={item.ProductId} className='ekrUEE'>\n            <a className=\"hkklCl\">\n              <div className=\"gqPLMb\">\n                  <div className=\"kTzLAm\">{item.ProductName}</div>\n                  <div className=\"kTzLAm\">{item.ProductPrice}$ x {item.Qty} Items = Total{item.ProductPrice*item.Qty}$</div>\n              </div>\n              <div className=\"hLtXwG\">\n              <div className=\"deCOwR\">\n                   <div className=\"imzCjD\">Where is this</div>\n              </div>\n              </div>\n            </a>\n              <div className='col-2'>........</div>\n              <div className='col-2'>\n                 <button onClick={()=> addToCart(item)}>+</button>\n                 <button onClick={()=>removeFromCart(item)}>-</button>\n              </div>\n              \n            </div>\n          ))}\n  \n      {cart.length > 0 && (\n        <>\n        <hr></hr>\n        <div>\n          <div className=\"col-2\">Cart Total</div>\n          <div className=\"col-1\">{itemsPrice.toFixed(2)}</div>\n        </div>\n        <div>\n          <div className=\"col-2\">Tax</div>\n          <div className=\"col-1\">{taxPrice.toFixed(2)}</div>\n        </div>\n        <div>\n          <div className=\"col-2\">Delivery</div>\n          <div className=\"col-1\">{shipping.toFixed(2)}</div>\n        </div>\n        <div>\n          <div className=\"col-2\"><strong>Total Price</strong></div>\n          <div className=\"col-1\">{totalPrice.toFixed(2)}</div>\n        </div>\n        </>\n      )}\n  \n      </aside>\n      )\n   }\n  \n  \n  export default Cart;\n\n\n\n\n// ________________________________\n  \n//   function checkout() {\n//     console.log('Gastando la Pasta')\n//   }\n  \n// console.log(cart)\n//   return(\n// <>\n//     <h1>Tienes {cart.length} producto en el carrito</h1>\n//     {cart && cart.map(item => {return (\n//       <>\n//         <h4>{item.ProductName} x {item.Qty}</h4>\n//         <p>{item.ProductPrice}$</p>\n//       </>)})}\n    \n//     {cart.length?<button onClick={checkout}>Checkout</button>:null}\n//     {cart.length? <p>Cart Total {() => console.log('cart total')}$</p> : null} \n//     { <button onClick={() => emptyCart()}>Empty Cart</button>}\n  \n// </>\n//   )\n","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Components/Navigation.js",["70","71","72"],"import React, {useContext, useState} from 'react';\nimport { AppContext } from '../Context/CartContext'\nimport { Link, NavLink } from 'react-router-dom';\n\n\n\nfunction Navigation ({data}) {\n  const [cart, _] = useContext(AppContext);\n  \n\n  return (\n    <>\n      <nav id='menu'>\n        <ul> \n             <li><Link to=\"/\">Home</Link></li>\n            <li><Link to=\"/Bakeries\">Bakeries</Link></li>\n            <li className='top-lef-link'><Link to=\"/About\">Sign In</Link></li>\n            <li className='top-right-link'><Link to=\"/Cart\">Cart: Items {cart.length}</Link></li>\n          </ul>\n    </nav>\n  </>\n)};\n\nexport default Navigation;\n\n\n\n\n// const [clicked, setClicked] = useState('Home');\n\n\n// function handleClick (e) {\n//   setClicked(e.target.name);\n//   console.log('event', e.target.name);\n  \n// }\n\n// console.log('clicked', clicked);\n\n// return (\n//   <>\n//   <nav>\n//       <button onClick={handleClick} name='Home'>Home</button>\n//       <button onClick = {handleClick} name= 'About'>About Us</button>\n//   </nav>\n\n//   {clicked === 'Home'? <Main data={data}/>:<About />}\n//   </>\n//   )","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Components/Landing.js",["73"],"// import React, {useState} from 'react';\n\n\n// export default function Landing () {\n//  const [value, setValue] = useState('');\n//  const [latitude, setLatitude] = useState();\n\n\n\n//  function handleChange (e) {\n//   e.preventDefault();\n//   setValue(e.target.value)\n\n \n \n// }\n \n//     return (\n//       <div className=\"bg_image\" >\n//         <h1 align=\"center\">Doughy</h1>\n//         <div className='landing-search-div'> \n//         <h1 align=\"center\" className=\"landing-span\" display=\"block\">Get Fresh Baked Goods</h1>\n//         <input align=\"center\" className=\"landing-search\" type=\"text\" aria-label=\"Your delivery address\" placeholder={value}  onChange={handleChange}></input>\n//         </div>\n//       </div>\n//     );\n// }\n\n// import useOnclickOutside from \"react-cool-onclickoutside\";\n\nimport React from 'react';\nimport usePlacesAutocomplete, {\n  getGeocode,\n  getLatLng,\n} from \"use-places-autocomplete\";\n\n\n\nconst Landing = () => {\n  const {\n    ready,\n    value,\n    suggestions: { status, data },\n    setValue,\n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      /* Define search scope here */\n    },\n    debounce: 300,\n  });\n  \n  const API_KEY = process.env.REACT_APP_GOOGLE_MAPS_API;\n \n\n  // const ref = useOnclickOutside(() => {\n  //   // When user clicks outside of the component, we can dismiss\n  //   // the searched suggestions by calling this method\n  //   clearSuggestions();\n  // });\n\n  const handleInput = (e) => {\n    // Update the keyword of the input element\n    setValue(e.target.value);\n  };\n\n  const handleSelect = ({ description }) => () => {\n    // When user selects a place, we can replace the keyword without request data from API\n    // by setting the second parameter to \"false\"\n    setValue(description, false);\n    clearSuggestions();\n\n    // Get latitude and longitude via utility functions\n    getGeocode({ address: description })\n      .then((results) => getLatLng(results[0]))\n      .then(({ lat, lng }) => {\n        console.log(\"📍 Coordinates: \", { lat, lng });\n      })\n      .catch((error) => {\n        console.log(\"😱 Error: \", error);\n      });\n  };\n\n  const renderSuggestions = () =>\n    data.map((suggestion) => {\n      const {\n        place_id,\n        structured_formatting: { main_text, secondary_text },\n      } = suggestion;\n\n      return (\n        <li key={place_id} onClick={handleSelect(suggestion)}>\n          <strong>{main_text}</strong> <small>{secondary_text}</small>\n        </li>\n      );\n    });\n\n    \n    \n    \n    \n    // return (\n    //   <div>\n    //     <input\n    //       value={value}\n    //       onChange={handleInput}\n    //       disabled={!ready}\n    //       placeholder=\"Where are you going?\"\n    //     />\n    //     {/* We can use the \"status\" to decide whether we should display the dropdown or not */}\n    //     {status === \"OK\" && <ul>{renderSuggestions()}</ul>}\n    //   </div>\n    // );\n\n\n\n      return (\n          <div className=\"bg_image\" >\n            <h1 align=\"center\">Doughy</h1>\n            <h1 align=\"center\" className=\"landing-span\" display=\"block\">Get Fresh Baked Goods</h1>\n            <div className='landing-search-div'></div>\n            {/* <input align=\"center\" className=\"landing-search\" type=\"text\" aria-label=\"Your delivery address\" placeholder={value}  onChange={handleChange}></input> */}\n          <div>\n          <input\n            value={value}\n            onChange={handleInput}\n            disabled={!ready}\n            placeholder=\"Enter your address\"\n            align=\"center\"\n            className=\"landing-search\"\n            type=\"text\" \n            />\n          {/* We can use the \"status\" to decide whether we should display the dropdown or not */}\n          {status === \"OK\" && <ul>{renderSuggestions()}</ul>}\n        </div>\n            \n          </div>\n        );\n    \n};\n\n\nexport default Landing","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Components/Tags.js",["74"],"import React from 'react';\n\nfunction Tags () {\n\nconst tags = [\n{name:'All', url:\"https://assets10.lottiefiles.com/temp/lf20_xRdYra.json\"},\n{name:'Bread',  url:\"../public/icons/gfree.svg\"}, \n{name:'Pastries',  url:\"../public/icons/cakecherry.svg\"},\n{name:'Gluten Free',  url:\"../public/icons/sandwichbread.svg\"}\n]\n\n\n  return (\n    <div className='tag-div'>\n      {tags.map(tag => {return <img src={tag.url} className='tag-a'></img>})}\n    </div>\n  )\n}\n\nexport default Tags;",["75","76"],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":16,"nodeType":"83","messageId":"84","endLine":1,"endColumn":24},{"ruleId":"81","severity":1,"message":"85","line":1,"column":26,"nodeType":"83","messageId":"84","endLine":1,"endColumn":35},{"ruleId":"81","severity":1,"message":"86","line":6,"column":8,"nodeType":"83","messageId":"84","endLine":6,"endColumn":11},{"ruleId":"87","severity":1,"message":"88","line":45,"column":1,"nodeType":"89","messageId":"90","endLine":63,"endColumn":8},{"ruleId":"87","severity":1,"message":"88","line":79,"column":3,"nodeType":"89","messageId":"90","endLine":91,"endColumn":13},{"ruleId":"87","severity":1,"message":"88","line":94,"column":29,"nodeType":"89","messageId":"90","endLine":96,"endColumn":37},{"ruleId":"81","severity":1,"message":"82","line":1,"column":16,"nodeType":"83","messageId":"84","endLine":1,"endColumn":24},{"ruleId":"81","severity":1,"message":"85","line":1,"column":26,"nodeType":"83","messageId":"84","endLine":1,"endColumn":35},{"ruleId":"81","severity":1,"message":"91","line":8,"column":16,"nodeType":"83","messageId":"84","endLine":8,"endColumn":17},{"ruleId":"81","severity":1,"message":"92","line":8,"column":20,"nodeType":"83","messageId":"84","endLine":8,"endColumn":22},{"ruleId":"87","severity":1,"message":"88","line":52,"column":1,"nodeType":"89","messageId":"90","endLine":68,"endColumn":49},{"ruleId":"81","severity":1,"message":"91","line":6,"column":18,"nodeType":"83","messageId":"84","endLine":6,"endColumn":19},{"ruleId":"81","severity":1,"message":"92","line":6,"column":22,"nodeType":"83","messageId":"84","endLine":6,"endColumn":24},{"ruleId":"93","severity":1,"message":"94","line":19,"column":13,"nodeType":"95","endLine":19,"endColumn":35},{"ruleId":"81","severity":1,"message":"82","line":1,"column":28,"nodeType":"83","messageId":"84","endLine":1,"endColumn":36},{"ruleId":"81","severity":1,"message":"96","line":3,"column":16,"nodeType":"83","messageId":"84","endLine":3,"endColumn":23},{"ruleId":"81","severity":1,"message":"91","line":8,"column":16,"nodeType":"83","messageId":"84","endLine":8,"endColumn":17},{"ruleId":"81","severity":1,"message":"97","line":53,"column":9,"nodeType":"83","messageId":"84","endLine":53,"endColumn":16},{"ruleId":"98","severity":1,"message":"99","line":15,"column":32,"nodeType":"95","endLine":15,"endColumn":69},{"ruleId":"77","replacedBy":"100"},{"ruleId":"79","replacedBy":"101"},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'IMG' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'_' is assigned a value but never used.","'__' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'NavLink' is defined but never used.","'API_KEY' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["102"],["103"],"no-global-assign","no-unsafe-negation"]