[{"/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/index.js":"1","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/App.js":"2","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/ApiService.js":"3","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Context/CartContext.js":"4","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Components/Main.js":"5","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Components/About.js":"6","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Components/Detail.js":"7","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Components/Cart.js":"8","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Components/Navigation.js":"9","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Components/Landing.js":"10","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Components/Tags.js":"11","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Context/LocationContext.js":"12","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Components/Bakery.js":"13","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Components/SearchLocation.js":"14","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Components/Footer.js":"15"},{"size":221,"mtime":1610149280973,"results":"16","hashOfConfig":"17"},{"size":1366,"mtime":1610927979235,"results":"18","hashOfConfig":"17"},{"size":767,"mtime":1610188690775,"results":"19","hashOfConfig":"17"},{"size":2365,"mtime":1610836454361,"results":"20","hashOfConfig":"17"},{"size":849,"mtime":1610928643231,"results":"21","hashOfConfig":"17"},{"size":111,"mtime":1610380424215,"results":"22","hashOfConfig":"17"},{"size":2528,"mtime":1610924129624,"results":"23","hashOfConfig":"17"},{"size":2937,"mtime":1610920823272,"results":"24","hashOfConfig":"17"},{"size":1367,"mtime":1610925342689,"results":"25","hashOfConfig":"17"},{"size":417,"mtime":1610909624796,"results":"26","hashOfConfig":"17"},{"size":412,"mtime":1610902289749,"results":"27","hashOfConfig":"17"},{"size":2714,"mtime":1610840416704,"results":"28","hashOfConfig":"17"},{"size":1362,"mtime":1610924406947,"results":"29","hashOfConfig":"17"},{"size":3066,"mtime":1610920015191,"results":"30","hashOfConfig":"17"},{"size":141,"mtime":1610925114622,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"cvb662",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/index.js",[],["69","70"],"/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/App.js",["71","72"],"/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/ApiService.js",[],"/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Context/CartContext.js",[],"/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Components/Main.js",["73","74","75","76"],"/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Components/About.js",[],"/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Components/Detail.js",["77","78","79","80","81","82","83"],"import React, {useState, useEffect, useContext} from 'react';\nimport {useParams} from 'react-router-dom'\nimport { AppContext } from '../Context/CartContext'\nimport DB from '../DB/db.json';\nimport { useHistory } from \"react-router-dom\";\nimport {Button} from '@material-ui/core';\n\nfunction Detail () {\n  const [cart, _,  __, addToCart, remove] = useContext(AppContext)\n  let history = useHistory(); \n  const db = DB;  \n  let {id} = useParams()\n  const bakery = db[id];\n\n\n    return (\n<>\n<div>\n  <div className=\".detail-div\">\n    <div className=\"detail-wrapper\">\n        <div className=\"detail-header\">\n        </div>\n    </div>\n    <div>\n      <h1>{bakery.name}</h1>\n      <p>{bakery.Description}</p>\n    </div>\n  </div>\n</div>\n\n<div className=\"detail-div\">\n      {/* <Button onClick={history.goBack} color=\"primary\" size=\"small\" variant=\"contained\">go back</Button> */}\n\n      <div className=\"product-div\">\n\n      {bakery && bakery.Products.map(product => {\n          return(\n            <div className=\"product-card\" key={product.ProductId}>\n              <div className=\"product-info-detail\">\n                  <div className=\"product-img\">\n                    \n                  </div>\n                  <div>\n                      <h2>{product.ProductName}</h2>\n                      <p>{product.ProductDescription}</p>\n                      <h5>{product.ProductPrice}$</h5>\n                      { cart.length === 0 ? <button onClick={() => {console.log('clicked'); addToCart(product)}}>+</button> : <button onClick={() => addToCart(product)}>+</button>}\n                      { cart.length > 0 ? <button onClick={() => remove(product)}> - </button> : <button> -</button>}\n                      {/* { <button onClick={() => emptyCart()}>Remove Item Cart</button>} */}\n                      {/* { <button onClick={() => emptyCart()}>Empty Cart</button>} */}\n                    </div>\n                </div>\n            </div>\n          )\n      })}\n  </div>\n  </div>\n  </>\n)\n}\n\nexport default Detail;\n\n{/* <h1> Id {id} </h1>\n{item && <p>Bakery Name: {item.name}</p>}\n\n// useEffect(() => {\n//   fetch(`https://jsonplaceholder.typicode.com/posts/${id}`)\n//             .then(response => response.json())\n//             .then(data => setItem(data))\n// }, [])\n\n// const cartItems = cart.map((el) => (\n    //   <div key={el.id}>\n    //     {`${el.name}: $${el.price}`}\n    //     <input type=\"submit\" value=\"remove\" onClick={() => removeFromCart(el)} />\n    //   </div>\n    // ));\n\n    <button onClick={addToCart}>Add</button> */}","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Components/Cart.js",["84","85","86","87"],"import React, { useContext } from 'react'\nimport { AppContext } from '../Context/CartContext'\nimport AddBoxIcon from '@material-ui/icons/AddBox';\n\n\n\n function Cart (props) {\n    const [cart, _,  __, addToCart, removeFromCart] = useContext(AppContext)  \n   \n    const itemsPrice = cart.reduce((a, c) => a + c.ProductPrice * c.Qty, 0);\n    const taxPrice = itemsPrice * 0.15;\n    const shipping = itemsPrice > 30? 0 : 3;\n    const totalPrice = itemsPrice + taxPrice + shipping;\n \n    return(\n      <aside>\n          <h2>Cart Items</h2>\n          {cart.length === 0 && <div className=\"empty-cart\"> <h1>Your cart is empty </h1></div>}\n          {cart.map(item => (\n            <div key={item.ProductId} className='ekrUEE'>\n            <a className=\"hkklCl\">\n              <div className=\"gqPLMb\">\n                  <div className=\"kTzLAm\">{item.ProductName}</div>\n                  <div className=\"kTzLAm\">{item.ProductPrice}$ x {item.Qty} Items = Total{item.ProductPrice*item.Qty}$</div>\n              </div>\n              <div className=\"hLtXwG\">\n              <div className=\"deCOwR\">\n                   <div className=\"imzCjD\">Where is this</div>\n              </div>\n              </div>\n            </a>\n              <div className='col-2'>........</div>\n              <div className='col-2'>\n                 {/* <AddBoxIcon><button onClick={()=> addToCart(item)}></button></AddBoxIcon> */}\n                <button onClick={()=> addToCart(item)}></button>\n                <button onClick={()=>removeFromCart(item)}></button>\n              </div>\n              \n            </div>\n          ))}\n  \n      {cart.length > 0 && (\n        <>\n        <hr></hr>\n        <div>\n          <div className=\"col-2\">Cart Total</div>\n          <div className=\"col-1\">{itemsPrice.toFixed(2)}</div>\n        </div>\n        <div>\n          <div className=\"col-2\">Tax</div>\n          <div className=\"col-1\">{taxPrice.toFixed(2)}</div>\n        </div>\n        <div>\n          <div className=\"col-2\">Delivery</div>\n          <div className=\"col-1\">{shipping.toFixed(2)}</div>\n        </div>\n        <div>\n          <div className=\"col-2\"><strong>Total Price</strong></div>\n          <div className=\"col-1\">{totalPrice.toFixed(2)}</div>\n        </div>\n        </>\n      )}\n  \n      </aside>\n      )\n   }\n  \n  \n  export default Cart;\n\n\n\n\n// ________________________________\n  \n//   function checkout() {\n//     console.log('Gastando la Pasta')\n//   }\n  \n// console.log(cart)\n//   return(\n// <>\n//     <h1>Tienes {cart.length} producto en el carrito</h1>\n//     {cart && cart.map(item => {return (\n//       <>\n//         <h4>{item.ProductName} x {item.Qty}</h4>\n//         <p>{item.ProductPrice}$</p>\n//       </>)})}\n    \n//     {cart.length?<button onClick={checkout}>Checkout</button>:null}\n//     {cart.length? <p>Cart Total {() => console.log('cart total')}$</p> : null} \n//     { <button onClick={() => emptyCart()}>Empty Cart</button>}\n  \n// </>\n//   )\n","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Components/Navigation.js",["88","89","90"],"import React, {useContext, useState} from 'react';\nimport { AppContext } from '../Context/CartContext'\nimport { Link, NavLink } from 'react-router-dom';\nimport HomeIcon from '@material-ui/icons/Home';\n\n\nfunction Navigation ({data}) {\n  const [cart, _] = useContext(AppContext);\n  \n\n  return (\n    <>\n    <div className='nav-wrapper-1'>\n      <nav id='menu'>\n    <div className='nav-inner'>\n        <div>\n          <ul> \n              <li className=\"home-icon\"><Link to=\"/\"><HomeIcon fontSize=\"medium\"></HomeIcon></Link></li>\n          </ul>\n        </div>\n          <div className=\"nav-right\">\n              <ul>\n                <li className='top-lef-link'><Link to=\"/About\">Sign In</Link></li>\n                <li className='top-right-link'><Link to=\"/Cart\">Cart: Items {cart.length}</Link></li>\n              </ul>\n          </div>\n    </div>\n    </nav>\n    </div>\n  </>\n)};\n\nexport default Navigation;\n\n\n\n\n// const [clicked, setClicked] = useState('Home');\n\n\n// function handleClick (e) {\n//   setClicked(e.target.name);\n//   console.log('event', e.target.name);\n  \n// }\n\n// console.log('clicked', clicked);\n\n// return (\n//   <>\n//   <nav>\n//       <button onClick={handleClick} name='Home'>Home</button>\n//       <button onClick = {handleClick} name= 'About'>About Us</button>\n//   </nav>\n\n//   {clicked === 'Home'? <Main data={data}/>:<About />}\n//   </>\n//   )","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Components/Landing.js",[],"/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Components/Tags.js",["91"],"import React from 'react';\nimport BreadLogo from '../public/icons/bread.png'\n\nfunction Tags () {\n\nconst tags = ['All','Bread','Pastries','Gluten Free']\n\n\n  return (\n    <div className='tag-div'>\n      {/* {tags.map(tag => {return <p className='tag-a'>{[tag]}</p>})} */}\n      {tags.map(tag => {return <div className=\"tag-wrapper\"><p className='tag-a'>{[tag]}</p></div>})}\n    </div>\n  )\n}\n\nexport default Tags;\n\n","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Context/LocationContext.js",["92"],"import React, {createContext, useState} from 'react';\nimport usePlacesAutocomplete, {\n  getGeocode,\n  getLatLng,\n} from \"use-places-autocomplete\";\nimport {Link} from 'react-router-dom';\n\n\nexport const LocationContext = createContext();\n\nconst LocationProvider = (props) => {\n  const [coordinates, setCoordinates] = useState([]);\n\n  const {\n    ready,\n    value,\n    suggestions: { status, data },\n    setValue,\n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      /* Define search scope here */\n    },\n    debounce: 300,\n  });\n  \n  // const ref = useOnclickOutside(() => {\n  //   // When user clicks outside of the component, we can dismiss\n  //   // the searched suggestions by calling this method\n  //   clearSuggestions();\n  // });\n\n  const handleInput = (e) => {\n\n    console.log(e.target.value)\n    setValue(e.target.value);\n  };\n\n  const handleSelect = ({ description }) => () => {\n    // When user selects a place, we can replace the keyword without request data from API\n    // by setting the second parameter to \"false\"\n    console.log(description);\n    setValue(description, false);\n    clearSuggestions(); \n\n    // Get latitude and longitude via utility functions\n    getGeocode({ address: description })\n      .then((results) => getLatLng(results[0]))\n      .then(({ lat, lng }) => {\n        console.log(\"📍 Coordinates: \", { lat, lng });\n        setCoordinates([{lat, lng}]);\n        // const coords = [lat, lang];\n      })\n      .catch((error) => {  // ----- description, {lat. lng} o [lat, lng]\n        console.log(\"😱 Error: \", error);\n      });\n  };\n\n  // const renderSuggestions = () =>\n  //   data.map((suggestion) => {\n  //     const {\n  //       place_id,\n  //       structured_formatting: { main_text, secondary_text },\n  //     } = suggestion;\n\n  //     return (\n  //       <li key={place_id} onClick={handleSelect(suggestion)}>\n  //         <strong>{main_text}</strong> <small>{secondary_text}</small>\n  //       </li>\n  //     );\n  //   });\n\n  \n  return ( \n    <LocationContext.Provider value={[coordinates, setCoordinates, handleInput, handleSelect, {\n      ready,\n      value,\n      suggestions: { status, data },\n      setValue,\n      clearSuggestions,\n    }]}>\n      {props.children}\n    </LocationContext.Provider>\n   );\n}\n \nexport default LocationProvider; \n\n    // return (\n    //   <div>\n    //     <input\n    //       value={value}\n    //       onChange={handleInput}\n    //       disabled={!ready}\n    //       placeholder=\"Where are you going?\"\n    //     />\n    //     {/* We can use the \"status\" to decide whether we should display the dropdown or not */}\n    //     {status === \"OK\" && <ul>{renderSuggestions()}</ul>}\n    //   </div>\n    // );\n","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Components/Bakery.js",[],"/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Components/SearchLocation.js",["93","94"],"import React, {createContext, useState, useContext} from 'react';\nimport usePlacesAutocomplete, {\n  getGeocode,\n  getLatLng,\n} from \"use-places-autocomplete\";\nimport {Link} from 'react-router-dom';\nimport {Button} from '@material-ui/core'\nimport {AppContext} from '../Context/CartContext'\n\nconst SearchLocation = () => {\n  const {\n    ready,\n    value,\n    suggestions: { status, data },\n    setValue,\n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      /* Define search scope here */\n    },\n    debounce: 300,\n  });\n  const [cart] = useContext(AppContext)\n  \n  // const ref = useOnclickOutside(() => {\n  //   // When user clicks outside of the component, we can dismiss\n  //   // the searched suggestions by calling this method\n  //   clearSuggestions();\n  // });\n\n  const handleInput = (e) => {\n    // Update the keyword of the input element\n    setValue(e.target.value);\n  };\n\n  const handleSelect = ({ description }) => () => {\n    // When user selects a place, we can replace the keyword without request data from API\n    // by setting the second parameter to \"false\"\n    setValue(description, false);\n    clearSuggestions();\n\n    // Get latitude and longitude via utility functions\n    getGeocode({ address: description })\n      .then((results) => getLatLng(results[0]))\n      .then(({ lat, lng }) => {\n        console.log(\"📍 Coordinates: \", { lat, lng });\n      })\n      .catch((error) => {\n        console.log(\"😱 Error: \", error);\n      });\n  };\n\n  const renderSuggestions = () =>\n    data.map((suggestion) => {\n      const {\n        place_id,\n        structured_formatting: { main_text, secondary_text },\n      } = suggestion;\n\n      return (\n        <li key={place_id} onClick={handleSelect(suggestion)}>\n          <strong>{main_text}</strong> <small>{secondary_text}</small>\n        </li>\n      );\n    });\n   \n   return (\n<>\n<div className=''>\n    <div className='input-wrapper'>\n        <form>\n              {/* <div className='search-input-wrapper'> */}\n              <div className='input-btn'>\n                  <input\n                    value={value}\n                    onChange={handleInput}\n                    disabled={!ready}\n                    placeholder=\"What's your address?\"\n                    type=\"text\" name=\"name\" className=\"question\"\n                    id=\"nme\" required autoComplete=\"off\"\n                  />\n                  {/* We can use the \"status\" to decide whether we should display the dropdown or not */}\n                  {status === \"OK\" && <ul className='question'>{renderSuggestions()}</ul>}\n\n                <Button className=\"search-btn\"  color=\"primary\" size=\"small\">Go!</Button>\n            </div>\n           <label for=\"nme\"><span></span></label>\n        {/* <input type=\"submit\" value=\"Submit!\" /> */}\n        </form>\n        <div className=\"search-bar-cart\">\n            <ul>\n              <li className='top-right-link'><Link to=\"/Cart\">Cart: Items {cart.length}</Link></li>\n            </ul>\n        </div>\n    </div>\n</div>\n</>\n    );\n};\n\nexport default SearchLocation;\n","/Users/adriandifelice/Desktop/solo-project-test/solo-test/src/Components/Footer.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":10,"column":8,"nodeType":"101","messageId":"102","endLine":10,"endColumn":15},{"ruleId":"99","severity":1,"message":"103","line":13,"column":8,"nodeType":"101","messageId":"102","endLine":13,"endColumn":22},{"ruleId":"99","severity":1,"message":"104","line":1,"column":16,"nodeType":"101","messageId":"102","endLine":1,"endColumn":24},{"ruleId":"99","severity":1,"message":"105","line":1,"column":26,"nodeType":"101","messageId":"102","endLine":1,"endColumn":35},{"ruleId":"99","severity":1,"message":"106","line":2,"column":9,"nodeType":"101","messageId":"102","endLine":2,"endColumn":13},{"ruleId":"99","severity":1,"message":"107","line":5,"column":8,"nodeType":"101","messageId":"102","endLine":5,"endColumn":11},{"ruleId":"99","severity":1,"message":"104","line":1,"column":16,"nodeType":"101","messageId":"102","endLine":1,"endColumn":24},{"ruleId":"99","severity":1,"message":"105","line":1,"column":26,"nodeType":"101","messageId":"102","endLine":1,"endColumn":35},{"ruleId":"99","severity":1,"message":"108","line":6,"column":9,"nodeType":"101","messageId":"102","endLine":6,"endColumn":15},{"ruleId":"99","severity":1,"message":"109","line":9,"column":16,"nodeType":"101","messageId":"102","endLine":9,"endColumn":17},{"ruleId":"99","severity":1,"message":"110","line":9,"column":20,"nodeType":"101","messageId":"102","endLine":9,"endColumn":22},{"ruleId":"99","severity":1,"message":"111","line":10,"column":7,"nodeType":"101","messageId":"102","endLine":10,"endColumn":14},{"ruleId":"112","severity":1,"message":"113","line":64,"column":1,"nodeType":"114","messageId":"115","endLine":80,"endColumn":49},{"ruleId":"99","severity":1,"message":"116","line":3,"column":8,"nodeType":"101","messageId":"102","endLine":3,"endColumn":18},{"ruleId":"99","severity":1,"message":"109","line":8,"column":18,"nodeType":"101","messageId":"102","endLine":8,"endColumn":19},{"ruleId":"99","severity":1,"message":"110","line":8,"column":22,"nodeType":"101","messageId":"102","endLine":8,"endColumn":24},{"ruleId":"117","severity":1,"message":"118","line":21,"column":13,"nodeType":"119","endLine":21,"endColumn":35},{"ruleId":"99","severity":1,"message":"104","line":1,"column":28,"nodeType":"101","messageId":"102","endLine":1,"endColumn":36},{"ruleId":"99","severity":1,"message":"120","line":3,"column":16,"nodeType":"101","messageId":"102","endLine":3,"endColumn":23},{"ruleId":"99","severity":1,"message":"109","line":8,"column":16,"nodeType":"101","messageId":"102","endLine":8,"endColumn":17},{"ruleId":"99","severity":1,"message":"121","line":2,"column":8,"nodeType":"101","messageId":"102","endLine":2,"endColumn":17},{"ruleId":"99","severity":1,"message":"106","line":6,"column":9,"nodeType":"101","messageId":"102","endLine":6,"endColumn":13},{"ruleId":"99","severity":1,"message":"122","line":1,"column":16,"nodeType":"101","messageId":"102","endLine":1,"endColumn":29},{"ruleId":"99","severity":1,"message":"104","line":1,"column":31,"nodeType":"101","messageId":"102","endLine":1,"endColumn":39},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'Landing' is defined but never used.","Identifier","unusedVar","'SearchLocation' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'IMG' is defined but never used.","'Button' is defined but never used.","'_' is assigned a value but never used.","'__' is assigned a value but never used.","'history' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'AddBoxIcon' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'NavLink' is defined but never used.","'BreadLogo' is defined but never used.","'createContext' is defined but never used.","no-global-assign","no-unsafe-negation"]